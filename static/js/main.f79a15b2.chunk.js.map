{"version":3,"sources":["User.js","TodoItem.js","todosApi.js","TodoList.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","Fragment","name","propTypes","PropTypes","string","isRequired","TodoItem","todo","id","title","className","cn","done","completed","undone","src_User","getTodos","todoData","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsers","userData","_context2","TodoList","state","isLoading","isShown","defaultpreparedTodos","preparedTodos","todos","users","showPreparedTodos","_this","setState","loadAllData","prepareData","t0","t1","t2","t3","call","_this$state","getPrepareTodos","map","find","person","userId","Object","objectSpread2","sortByTitle","prevState","toConsumableArray","sort","b","localeCompare","sortByUser","sortByStatus","sortById","_this2","this","_this$state2","sortList","callback","type","onClick","src_TodoItem","React","Component","ReactDOM","render","src_TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.f79a15b2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => <>{user.name}</>;\n\nUser.propTypes = { user: PropTypes.string.isRequired };\n\nexport default User;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td className={cn(\n      { done: todo.completed },\n      { undone: !todo.completed },\n    )}\n    >\n      {todo.completed ? 'finished' : 'not finished'}\n    </td>\n    <td><User user={todo.user} /></td>\n  </tr>\n);\n\nTodoItem.propTypes = { todo: PropTypes.string.isRequired };\nexport default TodoItem;\n","const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodos = async() => {\n  const todoData = await fetch(todosUrl);\n\n  return todoData.json();\n};\n\nexport const getUsers = async() => {\n  const userData = await fetch(usersUrl);\n\n  return userData.json();\n};\n","import React from 'react';\nimport './App.css';\nimport TodoItem from './TodoItem';\nimport { getTodos, getUsers } from './todosApi';\n\nclass TodoList extends React.Component {\n  state = {\n    isLoading: false,\n    isShown: true,\n    defaultpreparedTodos: [],\n    preparedTodos: [],\n    todos: [],\n    users: [],\n  }\n\n    showPreparedTodos = async() => {\n      this.setState({\n        isLoading: true,\n      });\n      await this.loadAllData();\n      this.prepareData();\n    };\n\n    loadAllData = async() => {\n      this.setState({\n        todos: await getTodos(),\n        users: await getUsers(),\n      });\n    }\n\n    prepareData = () => {\n      const { todos, users } = this.state;\n\n      const getPrepareTodos = () => todos.map((todo) => {\n        const user = users.find(person => person.id === todo.userId);\n\n        return {\n          ...todo,\n          user,\n        };\n      });\n\n      this.setState({\n        preparedTodos: getPrepareTodos(),\n        defaultpreparedTodos: getPrepareTodos(),\n        isLoading: false,\n        isShown: false,\n      });\n    }\n\n  sortByTitle = () => {\n    this.setState(prevState => ({\n      preparedTodos: [...prevState.defaultpreparedTodos]\n        .sort((a, b) => a.title.localeCompare(b.title)),\n    }));\n  };\n\n  sortByUser = () => {\n    this.setState(prevState => ({\n      preparedTodos: [...prevState.defaultpreparedTodos]\n        .sort((a, b) => a.user.name.localeCompare(b.user.name)),\n    }));\n  };\n\n  sortByStatus = () => {\n    this.setState(prevState => ({\n      preparedTodos: [...prevState.defaultpreparedTodos]\n        .sort((a, b) => a.completed - b.completed),\n    }));\n  };\n\n  sortById = () => {\n    this.setState(prevState => ({\n      preparedTodos: [...prevState.defaultpreparedTodos]\n        .sort((a, b) => a.id - b.id),\n    }));\n  };\n\n  render() {\n    const { isShown, isLoading, preparedTodos } = this.state;\n\n    const sortList = [\n      {\n        title: 'id', callback: this.sortById,\n      },\n      {\n        title: 'title', callback: this.sortByTitle,\n      },\n      {\n        title: 'status', callback: this.sortByStatus,\n      },\n      {\n        title: 'user', callback: this.sortByUser,\n      },\n    ];\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        {\n          isShown ? (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.showPreparedTodos();\n              }}\n            >\n              {isLoading ? 'Loading...' : 'Load'}\n            </button>\n          ) : (\n            <>\n              <table>\n                <thead>\n                  <tr>\n                    {sortList.map(sort => (\n                      <th\n                        onClick={sort.callback}\n                      >\n                        {sort.title}\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {preparedTodos.map(todo => (\n                    <TodoItem todo={todo} />\n                  ))}\n                </tbody>\n\n              </table>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default TodoList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["User.js","TodoItem.js","todosApi.js","TodoList.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","Fragment","name","propTypes","PropTypes","objectOf","any","isRequired","TodoItem","todo","id","title","className","cn","done","completed","undone","src_User","getTodos","todoData","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsers","userData","_context2","TodoList","_useState","useState","_useState2","Object","slicedToArray","isLoading","setIsLoading","_useState3","_useState4","isShown","setIsShown","_useState5","_useState6","defaultpreparedTodos","setDefaultPreparedTodos","_useState7","_useState8","preparedTodos","setPreparedTodos","_useState9","_useState10","isSorting","setIsSorting","sortList","callback","toConsumableArray","sort","b","localeCompare","type","onClick","_ref2","listOfTodos","listOfUsers","mergedTodos","Promise","all","map","find","person","userId","objectSpread2","showPreparedTodos","key","src_TodoItem","ReactDOM","render","src_TodoList","document","getElementById"],"mappings":"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","file":"static/js/main.e6c9e2a7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => <>{user.name}</>;\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.id}</td>\n    <td>{todo.title}</td>\n    <td className={cn(\n      { done: todo.completed },\n      { undone: !todo.completed },\n    )}\n    >\n      {todo.completed ? 'finished' : 'not finished'}\n    </td>\n    <td><User user={todo.user} /></td>\n  </tr>\n);\n\nTodoItem.propTypes = { todo: PropTypes.shape({\n  userId: PropTypes.number,\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  user: PropTypes.object,\n}).isRequired };\nexport default TodoItem;\n","const todosUrl = 'https://jsonplaceholder.typicode.com/todos';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodos = async() => {\n  const todoData = await fetch(todosUrl);\n\n  return todoData.json();\n};\n\nexport const getUsers = async() => {\n  const userData = await fetch(usersUrl);\n\n  return userData.json();\n};\n","import React, { useState } from 'react';\nimport './Main.css';\nimport TodoItem from './TodoItem';\nimport { getTodos, getUsers } from './todosApi';\n\nconst TodoList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isShown, setIsShown] = useState(true);\n  const [defaultpreparedTodos, setDefaultPreparedTodos] = useState([]);\n  const [preparedTodos, setPreparedTodos] = useState([]);\n  const [isSorting, setIsSorting] = useState('id');\n\n  const showPreparedTodos = async() => {\n    setIsLoading(true);\n\n    const [listOfTodos, listOfUsers] = await Promise\n      .all([getTodos(), getUsers()]);\n\n    const mergedTodos = listOfTodos.map((todo) => {\n      const user = listOfUsers.find(person => person.id === todo.userId);\n\n      return {\n        ...todo,\n        user,\n      };\n    });\n\n    setPreparedTodos(mergedTodos);\n    setDefaultPreparedTodos(mergedTodos);\n    setIsLoading(false);\n    setIsShown(false);\n  };\n\n  const sortByTitle = (title) => {\n    if (isSorting !== title) {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => a.title.localeCompare(b.title)));\n      setIsSorting(title);\n    } else {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => b.title.localeCompare(a.title)));\n      setIsSorting('');\n    }\n  };\n\n  const sortByUser = (title) => {\n    if (isSorting !== title) {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n      setIsSorting(title);\n    } else {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => b.user.name.localeCompare(a.user.name)));\n      setIsSorting();\n    }\n  };\n\n  const sortByStatus = (title) => {\n    if (isSorting !== title) {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => a.completed - b.completed));\n      setIsSorting(title);\n    } else {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => b.completed - a.completed));\n      setIsSorting();\n    }\n  };\n\n  const sortById = (title) => {\n    if (isSorting !== title) {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => a.id - b.id));\n      setIsSorting(title);\n    } else {\n      setPreparedTodos([...defaultpreparedTodos]\n        .sort((a, b) => b.id - a.id));\n      setIsSorting();\n    }\n  };\n  const sortList = [\n    {\n      title: 'id', callback: sortById,\n    },\n    {\n      title: 'title', callback: sortByTitle,\n    },\n    {\n      title: 'status', callback: sortByStatus,\n    },\n    {\n      title: 'user', callback: sortByUser,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      {\n        isShown ? (\n          <button\n            type=\"button\"\n            onClick={() => {\n              showPreparedTodos();\n            }}\n          >\n            {isLoading ? 'Loading...' : 'Load'}\n          </button>\n        ) : (\n          <>\n            <table>\n              <thead>\n                <tr>\n                  {sortList.map(sort => (\n                    <th\n                      onClick={() => sort.callback(sort.title)}\n                      key={sort.title}\n                    >\n                      {sort.title}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {preparedTodos.map(todo => (\n                  <TodoItem\n                    todo={todo}\n                    key={todo.id}\n                  />\n                ))}\n              </tbody>\n\n            </table>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(<TodoList />, document.getElementById('root'));\n"],"sourceRoot":""}